#!./.IOT/bin/python
import os

import fire
import torchvision
import requests
from urllib.parse import urlparse
from pathlib import Path


# Helper function to download a file
def download_file(url, filename=None, filedir=None):
    if filename is None:
        a = urlparse(url)
        filename = os.path.basename(a.path)
    if filedir is not None:
        filename = os.path.join(filedir, filename)
    Path(filedir).mkdir(parents=True, exist_ok=True)
    with requests.get(url) as r:
        r.raise_for_status()
        with open(filename, "wb") as f:
            f.write(r.content)
    return filename


def get_data(out_dir="bin/data"):
    # Make dir if necessary
    if not os.path.exists(out_dir):
        os.mkdir(out_dir)
    # Check if the data is already downloaded
    if os.path.exists(os.path.join(out_dir, "nodes5_normal.csv"))and os.path.exists( os.path.join(out_dir, "nodes5_base.csv")):
        print(f"Files already downloaded to {out_dir}")
        return

    # # Set URLs for the dataset( should set the url address of  data set here to download)
    # nodes5_agg_b_url = "www.example.com/nodes5_base.csv"
    # nodes5_base_url = "www.example.com/nodes5_base.csv"

    # # Download the files to the data directory
    # normal_data = download_file(nodes5_agg_b_url, "nodes5_normal.csv", out_dir)
    # base_data= download_file(nodes5_base_url, "nodes5_base.csv", out_dir)

    print(f"Downloaded files to {out_dir}")


if __name__ == "__main__":
    fire.Fire(get_data)
